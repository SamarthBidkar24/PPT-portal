from flask import Flask, render_template, request, redirect, url_for, session
from flask_sqlalchemy import SQLAlchemy
from werkzeug.utils import secure_filename
import os

app = Flask(_name_)
app.secret_key = 'secretkey'
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///portal.db'
app.config['UPLOAD_FOLDER'] = 'uploads/'
db = SQLAlchemy(app)

# User Model (Admin, Trainer, Student)
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(50), unique=True, nullable=False)
    password = db.Column(db.String(50), nullable=False)
    role = db.Column(db.String(10), nullable=False)  # Admin, Trainer, Student

# PPT & Assignment Model
class CourseMaterial(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    filename = db.Column(db.String(100), nullable=False)
    file_path = db.Column(db.String(200), nullable=False)
    uploaded_by = db.Column(db.Integer, db.ForeignKey('user.id'))
    role = db.Column(db.String(10), nullable=False)  # 'ppt' or 'assignment'

# Ensure upload folder exists
if not os.path.exists(app.config['UPLOAD_FOLDER']):
    os.makedirs(app.config['UPLOAD_FOLDER'])

@app.route('/')
def home():
    return render_template('login.html')

@app.route('/login', methods=['POST'])
def login():
    username = request.form['username']
    password = request.form['password']
    user = User.query.filter_by(username=username, password=password).first()
    if user:
        session['user_id'] = user.id
        session['role'] = user.role
        if user.role == 'admin':
            return redirect(url_for('admin_dashboard'))
        elif user.role == 'trainer':
            return redirect(url_for('trainer_dashboard'))
        else:
            return redirect(url_for('student_dashboard'))
    return 'Invalid credentials, try again!'

@app.route('/admin')
def admin_dashboard():
    if session.get('role') != 'admin':
        return redirect(url_for('home'))
    trainers = User.query.filter_by(role='trainer').all()
    return render_template('admin.html', trainers=trainers)

@app.route('/trainer')
def trainer_dashboard():
    if session.get('role') != 'trainer':
        return redirect(url_for('home'))
    return render_template('trainer.html')

@app.route('/student')
def student_dashboard():
    if session.get('role') != 'student':
        return redirect(url_for('home'))
    materials = CourseMaterial.query.filter_by(role='ppt').all()
    return render_template('student.html', materials=materials)

@app.route('/upload', methods=['POST'])
def upload():
    if 'file' not in request.files:
        return 'No file uploaded'
    file = request.files['file']
    role = request.form['role']  # 'ppt' or 'assignment'
    if file.filename == '':
        return 'No selected file'
    filename = secure_filename(file.filename)
    file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
    file.save(file_path)
    material = CourseMaterial(filename=filename, file_path=file_path, uploaded_by=session['user_id'], role=role)
    db.session.add(material)
    db.session.commit()
    return redirect(url_for('trainer_dashboard'))

@app.route('/logout')
def logout():
    session.pop('user_id', None)
    session.pop('role', None)
    return redirect(url_for('home'))

if _name_ == '_main_':
    db.create_all()
    app.run(debug=True)
